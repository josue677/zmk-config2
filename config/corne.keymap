/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// #define AS(keycode) &as LS(keycode) keycode

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U   |  I   |  O   | P |
            // |  A  |  S  |  D  |  F  |  G  |     |  H  |  J   |  K   |  L   | ' | 
            // |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M   | CTRL | META | . |
            //             | GUI | LWR | SPC |     | ENT | RSE  | BSPC |

            display-name = "Base";
            bindings = <
  &kp Q  &k bW  &kb E     &k bR  &kb T        &kb Y    &kb U  &kb I     &kb O     &kb P
  &kb A  &kb S  &kb D     &kb F  &kb G        &kb H    &kb J  &kb K     &kb L     &kb SQT
  &kb Z  &kb X  &kb C     &kb V  &kb B        &kb N    &kb M  &kp LCTL  &kp RALT  &kb DOT
                &kp LGUI  &mo 1  &kp SPACE    &kb RET  &mo 2  &kp BSPC
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // | !     |  @  |  #  |  $  |  %  |     |  ^  |  &  |  *  |  (  |  )  |
            // | BT1   | BT2 | BT3 | BT4 | BT5 |     | LFT | DWN |  UP | RGT |     |
            // | BTCLR |     |     |     |     |     |     |     |     |     |     |
            //               | GUI |     | SPC |     | ENT | ESC | TAB |

            display-name = "Lower";
            bindings = <
  &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT       &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR
  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT   &kp DOWN  &kp UP           &kp RIGHT  &trans
  &bt BT_CLR    &trans        &trans        &trans        &trans          &trans     &trans    &trans           &trans     &trans
                              &kp LGUI      &trans        &kp SPACE       &kb RET    &kp ESC   &kp TAB
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // | 1! |  2@ |  3# |  4$ |  5% |     |  6^ |  7& |  8* |  9(  |  0)  |
            // | -_ |  =+ |  {  |  [  |  (  |     |  )  |  ]  |  }  |  /?  |  \|  |
            // | `~ |     |     |  ,< |  :  |     |  ;  |  .> | CTRL| META |      |
            //            | GUI | ESC | SPC |     | ENT |     | TAB |

            display-name = "Raise";
            bindings = <
  &kb N1     &kb N2     &kb N3    &kb N4     &kb N5       &kb N6    &kb N7    &kb N8     &kb N9    &kb N0
  &kb MINUS  &kb EQUAL  &kp LBRC  &kp LBKT   &kp LPAR     &kp RPAR  &kp RBKT  &kp RBRC   &kb FSLH  &kb BSLH
  &kb GRAVE  &trans     &trans    &kb COMMA  &kp COLON    &kp SEMI  &kb DOT   &kp LCTRL  &kp RALT  &trans
                        &kp LGUI  &kp ESC    &kp SPACE    &kb RET   &trans    &kp TAB
            >;
        };
    };
};
